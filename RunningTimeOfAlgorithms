import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'runningTime' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int runningTime(List<Integer> arr) {
    // Write your code here
    int n = 0;
    for (int i = 0; i < arr.size(); i++)
    {
        
        int saved = arr.get(i);
        int counter = i - 1;
        while (counter >= 0 && arr.get(counter) > saved)
        {
            arr.set(counter+1, arr.get(counter));
            counter --;
            n++;
        }
        arr.set(counter + 1, saved);
        if (i !=0 )
        {
        printArray(arr);
        }
    }
    return n;
    }

    
    public static void printArray(List<Integer> arr){
        for (int num : arr) 
        {
        System.out.print(num + " ");
        }
    System.out.println();
    
    }

}


public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.runningTime(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
